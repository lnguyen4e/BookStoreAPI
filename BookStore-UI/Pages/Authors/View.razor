@page "/authors/view/{Id}"

@inject NavigationManager _navManager
@inject IAuthorRepository _authRepo

@if (Model == null)
{
    <div class="alert alert-dismissible alert-secondary">
        Loading author...
    </div>
}
else
{
    <div class="col-md-4">
        <h4>Author Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>First Name</td>
                <td>@Model.Firstname</td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td>@Model.Lastname</td>
            </tr>
            <tr>
                <td>Biography</td>
                <td>@Model.Bio</td>
            </tr>
        </table>
        <br />
        
        <div class="card" style="width: 18rem;">
            <div class="card-header">
                <h4>Author's books</h4>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (var book in Model.Books)
                {
                    <li class="list-group-item">@book.Title - @book.Price</li>
                }

            </ul>
        </div>
    </div>

}
<button @onclick="BackToList">Back To List</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);

        Model = await _authRepo.Get(Endpoints.AuthorsEndpoint, id);
    }
    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }

}
